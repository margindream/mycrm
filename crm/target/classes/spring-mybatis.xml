<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- 扫描除了控制器以外的所有组件 -->
	<context:component-scan base-package="com.wax.lp">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!-- 引入数据库的配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<!-- Sping 的事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 开启基于注解的事务-->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 创建sqlSessionfactory对象 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!--configLocation 指定Mybatis的全局配置文件  -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- mapperLocations 指定mapper映射文件 -->
		<property name="mapperLocations" value="classpath*:com/wax/lp/mapper/*.xml"></property>
		<!-- 分页插件部分 -->
		 <property name="plugins">
		      <array>
		          <bean class="com.github.pagehelper.PageInterceptor">
		              <property name="properties">
		                  <props>
		                      <prop key="helperDialect">mysql</prop>
		                      <prop key="reasonable">true</prop>
		                  </props>
		              </property>
		          </bean>
		      </array>
  		</property>
	</bean>
	<!--扫描所有的mapper接口的实现，让这些mapper能够自动注入; -->
	<mybatis-spring:scan base-package="com.wax.lp.dao"/>
	<!--老版本的 -->
	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.wax.ssm.dao"></property>
	</bean> -->
</beans>
